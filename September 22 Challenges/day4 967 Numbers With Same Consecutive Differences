Time and sapce Complexity=O(N*2^N)

class Solution {
    public int[] numsSameConsecDiff(int n, int k) {
        List<Integer> result = new ArrayList<>();
        for(int i=1;i<10;i++){
            dfs(i,n-1,k,result);
        }
        return result.stream().mapToInt(i->i).toArray();
    }
    public void dfs(int num,int n,int k,List<Integer> result){
        if(n==0){
            result.add(num);
            return;
        }
        int last_digit=num%10;
        if(last_digit>=k){
            dfs(num*10+last_digit-k,n-1,k,result);
        }
        if(k>0 && last_digit+k<10){  //test case fail == n=2,k=0 Output = [11,11,22,22,33,33,44,44,55,55,66,66,77,77,88,88]
            dfs(num*10+last_digit+k,n-1,k,result);
        }
    }
}
