class BalancedBinaryTree{

  // Definition for a binary tree node.
	public class TreeNode {
		int val;
		TreeNode left;
		TreeNode right;

		TreeNode() {
		}

		TreeNode(int val) {
			this.val = val;
		}

		TreeNode(int val, TreeNode left, TreeNode right) {
			this.val = val;
			this.left = left;
			this.right = right;
		}
    
    class Pair{
      int height;
      boolean isBal;
      Pair(int height,boolean isBal){
          this.height = height;
          this.isBal = isBal;
      }
    }
    
    
    public boolean isBalanced(TreeNode root){
        Pair isBalance = isBalancedd(root);
        return isBalance.isBal;
    }
    
    public Pair isBalancedd(TreeNode root) {
        if(root == null){
            return new Pair(0,true);
        }
        Pair kyaLeftSubTreeBalanceHai = isBalancedd(root.left);
        Pair kyaRightSubTreeBalanceHai = isBalancedd(root.right);
        
        int apniHeight = Math.max(kyaLeftSubTreeBalanceHai.height,kyaRightSubTreeBalanceHai.height) +1;
        
        int diff = Math.abs(kyaLeftSubTreeBalanceHai.height - kyaRightSubTreeBalanceHai.height);
        boolean ans = diff<=1 && kyaLeftSubTreeBalanceHai.isBal && kyaRightSubTreeBalanceHai.isBal;
        
        return new Pair(apniHeight,ans);
        
    }
}
